{"version":3,"sources":["fBase.js","routes/Profile.js","components/AuthForm.js","routes/Auth.js","components/Tweet.js","components/TweetFactory.js","routes/Home.js","components/Navigation.js","components/Router.js","components/Footer.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","Profile","userObj","refreshuser","setIsLoggedIn","useState","displayName","newDisplayName","setNewDisplayName","error","setError","history","useHistory","onSubmit","e","a","preventDefault","updateProfile","console","log","className","type","placeholder","value","onChange","target","trim","onClick","signOut","push","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","handleChange","name","handleSubmit","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","required","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","size","faGoogle","faGithub","Tweet","tweetObj","isOwner","editing","setEditing","text","newTweet","setNewTweet","toggleEditing","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","update","src","alt","width","height","title","faEdit","faTrash","TweetFactory","tweet","setTweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","res","getDownloadURL","creatorId","createdAt","Date","now","collection","add","maxLength","onKeyUp","length","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","htmlFor","faPlus","Home","tweets","setTweets","getMyTweets","orderBy","onSnapshot","snapshot","tweetArray","docs","map","data","useEffect","Navigation","isDark","setIsDark","trans","document","documentElement","classList","setTimeout","remove","to","setAttribute","faMoon","faSun","AppRouter","isLoggedIn","basename","exact","path","Footer","getFullYear","href","faEnvelopeOpen","faBookReader","faLinkedinIn","faBlogger","App","init","setInit","setUserObj","onAuthStateChanged","user","currentUser","args","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.804cdd98.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport 'firebase/storage';\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n}\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import { authService } from 'fBase';\r\nimport React, { useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\nconst Profile = ({ userObj, refreshuser, setIsLoggedIn }) => {\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName ? userObj.displayName : '');\r\n    const [error, setError] = useState('');\r\n\r\n    const history = useHistory();\r\n\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push('/');\r\n        setIsLoggedIn(false);\r\n    }\r\n     // useEffect(() => {\r\n    //     getMyTweets();\r\n    // }, [])\r\n\r\n    // const getMyTweets = async () => {\r\n    //     await dbService.collection('tweets')\r\n    //     .where('creatorId', '==', userObj.uid)\r\n    //     .orderBy('createdAt', \"desc\")\r\n    //     .get();\r\n    // }\r\n\r\n    const onChange  = (e) => {\r\n        const { target: { value } } = e;\r\n        setNewDisplayName(value.trim()) ;\r\n    }\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setError('');\r\n        if (newDisplayName === '') {\r\n            setError('Name can\\'t be empty');\r\n            return\r\n        }\r\n        if (userObj.displayName !== newDisplayName) {\r\n            try {\r\n                await userObj.updateProfile({\r\n                    displayName: newDisplayName\r\n                });\r\n                refreshuser();\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    \r\n    return (\r\n    <main className='profileWrapper wrapper'>\r\n        <form onSubmit={onSubmit}>\r\n            <input type='text' placeholder='Display Name' value={newDisplayName} onChange={onChange} className='factoryInput' />\r\n            <input type='submit' value='Update Profile' className='factoryInput submitBtn'/>\r\n            {error && <span className='error'>{error}</span>}\r\n        </form>\r\n        <button className='profileBtn' onClick={onLogOutClick}>Log Out</button>\r\n    </main>)\r\n} \r\nexport default Profile;\r\n","import { authService } from 'fBase';\r\nimport React, { useState } from 'react';\r\n\r\nconst AuthForm = ({ error, setError }) => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    \r\n\r\n    const toggleAccount = () => {\r\n        setNewAccount((prev) => !prev)\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        const {target: {name, value}} = e;\r\n        if (name === 'email') {\r\n            setEmail(value)\r\n        } else if (name === 'password') {\r\n            setPassword(value)\r\n        }\r\n    }\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            if (newAccount) {\r\n                await authService.createUserWithEmailAndPassword(email, password);\r\n            } else {\r\n                await authService.signInWithEmailAndPassword(email, password)\r\n            }\r\n        } catch(err) {\r\n            setError(err.message);\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit} className='authForm'>\r\n                <input name='email' type='email' placeholder='Email' value={email} required onChange={handleChange} className='factoryInput'/>\r\n                <input name='password' type='password' placeholder='Password' value={password} required onChange={handleChange} className='factoryInput' />\r\n                <input type='submit' value={newAccount ? 'Create Account' : 'Log In'} onClick={handleSubmit} className='factoryInput submitBtn' />\r\n                <span className='error'>{error}</span>\r\n            </form>\r\n            <span className='authSwitch' onClick={toggleAccount}>Switch to {newAccount ? 'Log In' : 'Create Account'}</span>\r\n        </>\r\n    )\r\n    \r\n}\r\n\r\nexport default AuthForm;","import React, { useState } from 'react';\r\nimport { authService, firebaseInstance } from 'fBase';\r\nimport AuthForm from 'components/AuthForm';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGithub, faGoogle, faTwitter } from '@fortawesome/free-brands-svg-icons';\r\n\r\nconst Auth = () => {\r\n    const [error, setError] = useState('');\r\n    const onSocialClick = async (e) => {\r\n        const {target: {name}} = e;\r\n        try {\r\n            let provider;\r\n            if (name === 'google') {\r\n                provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n            } else if (name === 'github') {\r\n                provider = new firebaseInstance.auth.GithubAuthProvider();\r\n            }\r\n            await authService.signInWithPopup(provider);\r\n        } catch (err) {\r\n            setError(err.message)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <main className='authWrapper wrapper'>\r\n            <div className='iconWrapper'>\r\n                <FontAwesomeIcon icon={faTwitter} size='3x' className='twitterIcon'/>\r\n            </div>\r\n            <AuthForm error={error} setError={setError} />\r\n            <div className='authBtns'>\r\n                <button className='authBtn' name='google' onClick={onSocialClick}>\r\n                    <FontAwesomeIcon icon={faGoogle} size='lg'/>\r\n                    Continue With Google</button>\r\n                <button className='authBtn' name='github' onClick={onSocialClick}>\r\n                    <FontAwesomeIcon icon={faGithub} size='lg' />\r\n                    Continue With Github</button>\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Auth;\r\n\r\n\r\n","import { faEdit, faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { dbService, storageService } from 'fBase';\r\nimport React, { useState } from 'react';\r\n\r\nconst Tweet = ({tweetObj, isOwner}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newTweet, setNewTweet] = useState(tweetObj.text);\r\n\r\n    const onChangeEdit = (e) => {\r\n        const {target: { value }} = e;\r\n        setNewTweet(value);\r\n    }\r\n    const toggleEditing = () => {\r\n        setEditing((prev) => !prev)\r\n    }\r\n    const onDeleteClick = async (e) => {\r\n        const ok = window.confirm('Are you sure you want to delete this tweet?')\r\n        \r\n        if (ok) {\r\n            await dbService.doc(`tweets/${tweetObj.id}`).delete();\r\n            if (tweetObj.attachmentUrl !== '') {\r\n                await storageService.refFromURL(tweetObj.attachmentUrl).delete();\r\n            }\r\n            \r\n        }\r\n    }\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        await dbService.doc(`tweets/${tweetObj.id}`).update({text: newTweet});\r\n        setEditing(false);\r\n    }\r\n\r\n    return (\r\n        <div className='tweet'>\r\n            {editing ?\r\n            <div className='tweetContainer'>\r\n                <form onSubmit={onSubmit} className='tweetEdit'>\r\n                    <input type='text' placeholder='Edit Your Tweet' value={newTweet} required onChange={onChangeEdit} className='factoryInput editInput' />\r\n                    <input type='submit' value='Update' className='factoryInput factorySubmit' />\r\n                    <input type='reset' value='Cancel' onClick={toggleEditing} className='factoryInput factoryCancle' />\r\n                </form>\r\n                \r\n                \r\n            </div> :\r\n            <div className='tweetContainer'>\r\n                <h4>{tweetObj.text}</h4>\r\n                {tweetObj.attachmentUrl && (\r\n                    <img className='factoryImg' src={tweetObj.attachmentUrl} alt='Profile' width='50px' height='50px' />\r\n                )}\r\n                {isOwner && \r\n                <div className='factoryBtns'>\r\n                    <button className='factoryBtn editBtn' onClick={toggleEditing} title='Edit Tweet'>\r\n                        <FontAwesomeIcon icon={faEdit} /></button>\r\n                    <button className='factoryBtn deleteBtn' onClick={onDeleteClick} title='Delete Tweet'>\r\n                        <FontAwesomeIcon icon={faTrash} /></button>\r\n                </div>}\r\n            </div>\r\n            }\r\n        </div>)\r\n}\r\n\r\nexport default Tweet;","import React, { useState } from 'react';\r\nimport { dbService, storageService } from 'fBase'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst TweetFactory = ({ userObj }) => {\r\n    const [tweet, setTweet] = useState('');\r\n    const [attachment, setAttachment] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        let attachmentUrl = '';\r\n        if (attachment !== '') {\r\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n            const res = await attachmentRef.putString(attachment, 'data_url');\r\n            attachmentUrl = await res.ref.getDownloadURL();   \r\n        }\r\n        const tweetObj = {\r\n            text: tweet,\r\n            creatorId: userObj.uid,\r\n            createdAt: Date.now(),\r\n            attachmentUrl\r\n        }\r\n\r\n        await dbService.collection('tweets').add(tweetObj);\r\n        setTweet('');\r\n        setAttachment('');\r\n        setError('');\r\n    }\r\n\r\n    const onChange = (e) => {\r\n        setError('');\r\n        const {target: { value }} = e;\r\n        setTweet(value);\r\n    }\r\n    const onKeyUp = (e) => {\r\n        const {target: { value }} = e;\r\n        if (value.length >= 120) {\r\n            setError('120자 이내로 작성해주세요.')\r\n        }\r\n    }\r\n\r\n    const onFileChange = (e) => {\r\n        const {target: { files }} = e;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const { currentTarget : { result }} = finishedEvent\r\n            setAttachment(result);\r\n        }\r\n        reader.readAsDataURL(theFile);\r\n    }\r\n\r\n    const onClearAttachement = () => {\r\n        setAttachment('');\r\n    }\r\n\r\n    \r\n    return (\r\n        <form onSubmit={onSubmit} className='factoryContainer'>\r\n            <section className='factoryInput__container'>\r\n                <input type='text' placeholder=\"What's on Your Mind?\" value={tweet} maxLength={120}  onKeyUp={onKeyUp} onChange={onChange} className='factoryInput' />\r\n                {error && <span className='error'>{error}</span>}\r\n                <input type='submit' value='Tweet' className='factoryInput submitBtn'/>\r\n            </section>\r\n            <section className='factoryAttachment__container'>\r\n                <input id='attach-file' type='file' accept='image/*' onChange={onFileChange} />\r\n                <label htmlFor='attach-file'><FontAwesomeIcon icon={faPlus} />Add Photo</label>\r\n                {attachment &&\r\n                <>\r\n                    <img src={attachment} alt='Profile' width='50px' height='50px' className='attachmentImg' />\r\n                    <button onClick={onClearAttachement} className='factoryInput attachmentClear'>Clear Photo</button>\r\n                </>}\r\n            </section>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default TweetFactory;","import Tweet from 'components/Tweet';\r\nimport TweetFactory from 'components/TweetFactory';\r\nimport { dbService } from 'fBase';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nconst Home = ({ userObj }) => {\r\n    const [tweets, setTweets] = useState([]);\r\n\r\n    const getMyTweets = async (e) => {\r\n        await dbService.collection('tweets')\r\n            .orderBy('createdAt', 'desc')\r\n            .onSnapshot(snapshot => {\r\n            const tweetArray = snapshot.docs.map(doc => ({id: doc.id, ...doc.data()}))\r\n            setTweets(tweetArray);\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getMyTweets()\r\n    }, [])\r\n\r\n    return(\r\n        <main className='homeWrapper wrapper'>\r\n            <TweetFactory userObj={userObj} />\r\n            <section className='displayContainer'>\r\n                {tweets.map(tweet => \r\n                    <Tweet tweetObj={tweet} key={tweet.id} isOwner={tweet.creatorId === userObj.uid} />\r\n                )}\r\n            </section>\r\n        </main>\r\n    )\r\n}\r\nexport default Home;\r\n","import { faMoon, faSun } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useState } from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Navigation = ({ userObj }) => {\r\n    const [isDark, setIsDark] = useState(false);\r\n    const toggleDarkMode = () => {\r\n        setIsDark(prev => !prev);\r\n        trans();\r\n        document.documentElement.setAttribute('data-theme', isDark ? 'light' : 'dark');\r\n    }\r\n    const trans = () => {\r\n        document.documentElement.classList.add('transition');\r\n        window.setTimeout(() => {\r\n            document.documentElement.classList.remove('transition')\r\n        }, 500)   \r\n    }\r\n\r\n    return (\r\n        <nav className='Navigation'>\r\n            <ul>\r\n                <li><Link to='/'>Home</Link></li>\r\n                <li>\r\n                    <Link to='/profile'>{userObj.displayName}'s Profile</Link>\r\n                    <button className='darkModeBtn' value='DarkMode' onClick={toggleDarkMode}>\r\n                        {isDark ? <FontAwesomeIcon icon={faMoon} /> : <FontAwesomeIcon icon={faSun} />}\r\n                    </button>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    ) \r\n}\r\n\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport Profile from 'routes/Profile';\r\nimport Auth from '../routes/Auth';\r\nimport Home from '../routes/Home';\r\nimport Navigation from './Navigation';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nconst AppRouter = ({refreshuser, isLoggedIn, userObj, setIsLoggedIn}) => {\r\n    return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <Switch>\r\n                {isLoggedIn ? \r\n                <>\r\n                    <Route exact path='/'>\r\n                        <Home userObj={userObj} />\r\n                    </Route> \r\n                    <Route exact path='/profile'>\r\n                        <Profile userObj={userObj} setIsLoggedIn={setIsLoggedIn} refreshuser={refreshuser} />\r\n                    </Route> \r\n                </> :\r\n                <>\r\n                    <Route exact path='/'>\r\n                        <Auth />\r\n                    </Route>\r\n                    \r\n                </>\r\n                }                \r\n            </Switch>\r\n        </Router>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default AppRouter;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBlogger, faGithub, faLinkedinIn } from '@fortawesome/free-brands-svg-icons';\r\nimport { faBookReader, faEnvelopeOpen } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Footer = () => (\r\n    <footer className='footer'>\r\n        <h6>&copy; Hannah26Hannah {new Date().getFullYear()}</h6>\r\n        <ul>\r\n            <a href=\"https://github.com/hannah26hannah\">\r\n                <li><FontAwesomeIcon icon={faGithub} /></li>\r\n            </a>\r\n            <a href=\"mailto: guaranteed.by.prismo@gmail.com\">\r\n                <li><FontAwesomeIcon icon={faEnvelopeOpen} /></li>\r\n            </a>\r\n            <a href=\"https://hannah26hannah.github.io/\">\r\n                <li><FontAwesomeIcon icon={faBookReader}/></li>\r\n            </a>\r\n            <a href=\"https://www.linkedin.com/in/jeongwon-yoo/\">\r\n                <li><FontAwesomeIcon icon={faLinkedinIn}/></li>\r\n            </a>\r\n            <a href=\"https://uiyoji-journal.tistory.com/\">\r\n                <li><FontAwesomeIcon icon={faBlogger} /></li>\r\n            </a>\r\n        </ul>\r\n\r\n    </footer>\r\n)\r\n\r\nexport default Footer;","import { useEffect, useState } from 'react';\r\nimport AppRouter from 'components/Router'\r\nimport { authService } from 'fBase';\r\nimport Footer from './components/Footer';\r\n\r\nfunction App() {\r\n    const [init, setInit] = useState(false);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    const [userObj, setUserObj] = useState(null);\r\n\r\n    useEffect(() => {\r\n        authService.onAuthStateChanged((user) => {\r\n            if (user) {\r\n                setUserObj(user)\r\n                // setUserObj({\r\n                //     displayName: user.displayName,\r\n                //     uid: user.uid,\r\n                //     updateProfile: (args) => user.updateProfile(args)\r\n                // });\r\n                setIsLoggedIn(true)\r\n            } else {\r\n                setUserObj(null)\r\n            }\r\n            setInit(true)\r\n        })\r\n    }, [])\r\n\r\n    const refreshuser = () => {\r\n        const user = authService.currentUser;\r\n        // setUserObj(Object.assign({}, user)); This will throw an error in Updating User Profile \r\n        setUserObj({\r\n            displayName: user.displayName,\r\n            uid: user.uid,\r\n            updateProfile: (args) => user.updateProfile(args)\r\n        });\r\n    }\r\n    return (\r\n        <>\r\n            {init ? <AppRouter isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} userObj={userObj} refreshuser={refreshuser} /> : <h1 className='initial'>Initializing ...</h1>}\r\n            <Footer />\r\n        </>\r\n    ) \r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./style/style.css\";\n\n\nReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}